# Base template for cluster generation
# Goal: 
# 1 - Zookeeper
# 3 - Brokers 
# 1 - Publishers 
# 1 - Consumers 
Resources:
  
  # ================================== Zookeeper ==================================
  Ec2InstanceZookeeper0:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              java-1.8.0-openjdk: [] # Install Java during provisioning
          commands: # executed in lexicographical order
            # download Zookeeper onto the AWS VM
            1_download_zk: 
              command: "wget https://apache.claz.org/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz"
              cwd: "/home/ec2-user"
            # extract the newly downloaded archive 
            2_extract_zk: 
              command: "tar -xzf apache-zookeeper-3.7.0-bin.tar.gz"
              cwd: "/home/ec2-user"
            # install zookeeper to the system
            3_install_zk: 
              command: "mv apache-zookeeper-3.7.0-bin /usr/local/zookeeper"
              cwd: "/home/ec2-user"
            # create a proper zookeeper data directory
            4_create_data_dir: 
              command: "mkdir /var/lib/zookeeper"
              cwd: "/home/ec2-user"
            # position the provided configuration
            5_dummy_configuration: 
              command: "cp /usr/local/zookeeper/conf/zoo_sample.cfg /usr/local/zookeeper/conf/zoo.cfg"
              cwd: "/home/ec2-user"
            # rewrite the configuration with the new data directory
            6_update_data_directory: 
              command: sed -i.bak 's/\/tmp\/zookeeper/\/var\/lib\/zookeeper/g' /usr/local/zookeeper/conf/zoo.cfg
              cwd: "/home/ec2-user"
            # update the permissions of the zookeeper files so ec2-user can access them
            7_update_zk_persmissions: 
              command: chmod 777 /usr/local/zookeeper /var/lib/zookeeper 
              cwd: "/home/ec2-user"
            8_update_zk_persmissions: 
              command: "chown ec2-user /usr/local/zookeeper/conf/*.cfg /var/lib/zookeeper /var/lib/zookeeper/*"
              cwd: "/home/ec2-user"

    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstanceZookeeper0 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+


  # ================================== Broker 0 ==================================
  Ec2InstanceBroker0:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              git: [] # Install git
          commands: # executed in lexicographical order
            # clone the repo for our project onto the machine
            1_clone_the_pub_sub_repo: 
              command: "git clone https://github.com/Andrew-Whitaker/pub-sub.git"
              cwd: "/home/ec2-user"
            2_install_kazoo: 
              command: "pip3 install kazoo"
              cwd: "/home/ec2-user"
            3_checkout_correct_branch: 
              command: "git checkout -b architecture origin/architecture"
              cwd: "/home/ec2-user/pub-sub"
            
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstanceBroker0 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  # ================================== Broker 1 ==================================
  Ec2InstanceBroker1:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              git: [] # Install git
          commands: # executed in lexicographical order
            # clone the repo for our project onto the machine
            1_clone_the_pub_sub_repo: 
              command: "git clone https://github.com/Andrew-Whitaker/pub-sub.git"
              cwd: "/home/ec2-user"
            2_install_kazoo: 
              command: "pip3 install kazoo"
              cwd: "/home/ec2-user"
            3_checkout_correct_branch: 
              command: "git checkout -b architecture origin/architecture"
              cwd: "/home/ec2-user/pub-sub"
            
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstanceBroker1 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  # ================================== Broker 2 ==================================
  Ec2InstanceBroker2:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              git: [] # Install git
          commands: # executed in lexicographical order
            # clone the repo for our project onto the machine
            1_clone_the_pub_sub_repo: 
              command: "git clone https://github.com/Andrew-Whitaker/pub-sub.git"
              cwd: "/home/ec2-user"
            2_install_kazoo: 
              command: "pip3 install kazoo"
              cwd: "/home/ec2-user"
            3_checkout_correct_branch: 
              command: "git checkout -b architecture origin/architecture"
              cwd: "/home/ec2-user/pub-sub"
            
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstanceBroker2 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  # ================================== Consumer 0 ==================================
  Ec2InstanceConsumer0:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              git: [] # Install git
          commands: # executed in lexicographical order
            # clone the repo for our project onto the machine
            1_clone_the_pub_sub_repo: 
              command: "git clone https://github.com/Andrew-Whitaker/pub-sub.git"
              cwd: "/home/ec2-user"
            2_install_kazoo: 
              command: "pip3 install kazoo"
              cwd: "/home/ec2-user"
            3_checkout_correct_branch: 
              command: "git checkout -b architecture origin/architecture"
              cwd: "/home/ec2-user/pub-sub"
            
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstanceConsumer0 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  # ================================== Publisher 0 ==================================
  Ec2InstancePublisher0:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages:
            yum:
              git: [] # Install git
          commands: # executed in lexicographical order
            # clone the repo for our project onto the machine
            1_clone_the_pub_sub_repo: 
              command: "git clone https://github.com/Andrew-Whitaker/pub-sub.git"
              cwd: "/home/ec2-user"
            2_install_kazoo: 
              command: "pip3 install kazoo"
              cwd: "/home/ec2-user"
            3_checkout_correct_branch: 
              command: "git checkout -b architecture origin/architecture"
              cwd: "/home/ec2-user/pub-sub"
            
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      InstanceType: t2.micro
      ImageId: 'ami-0d5eff06f840b45e9' # Basic Amazon Linux without Java 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2InstancePublisher0 '
            # - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Everywhere + SSH access via port 22 separately
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp 
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
        
